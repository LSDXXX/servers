// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schedule.proto

package schedule

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TaskNotifyRequest struct {
	Id                   int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FlowId               string     `protobuf:"bytes,2,opt,name=flowId,proto3" json:"flowId,omitempty"`
	ProjectId            int64      `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	SeqPath              string     `protobuf:"bytes,4,opt,name=seqPath,proto3" json:"seqPath,omitempty"`
	State                int64      `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	BussinessData        string     `protobuf:"bytes,6,opt,name=bussinessData,proto3" json:"bussinessData,omitempty"`
	ErrMessage           string     `protobuf:"bytes,7,opt,name=errMessage,proto3" json:"errMessage,omitempty"`
	WorkerID             string     `protobuf:"bytes,8,opt,name=workerID,proto3" json:"workerID,omitempty"`
	Created              *Timestamp `protobuf:"bytes,9,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TaskNotifyRequest) Reset()         { *m = TaskNotifyRequest{} }
func (m *TaskNotifyRequest) String() string { return proto.CompactTextString(m) }
func (*TaskNotifyRequest) ProtoMessage()    {}
func (*TaskNotifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d00842e68e05382a, []int{0}
}

func (m *TaskNotifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskNotifyRequest.Unmarshal(m, b)
}
func (m *TaskNotifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskNotifyRequest.Marshal(b, m, deterministic)
}
func (m *TaskNotifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskNotifyRequest.Merge(m, src)
}
func (m *TaskNotifyRequest) XXX_Size() int {
	return xxx_messageInfo_TaskNotifyRequest.Size(m)
}
func (m *TaskNotifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskNotifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskNotifyRequest proto.InternalMessageInfo

func (m *TaskNotifyRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TaskNotifyRequest) GetFlowId() string {
	if m != nil {
		return m.FlowId
	}
	return ""
}

func (m *TaskNotifyRequest) GetProjectId() int64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *TaskNotifyRequest) GetSeqPath() string {
	if m != nil {
		return m.SeqPath
	}
	return ""
}

func (m *TaskNotifyRequest) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *TaskNotifyRequest) GetBussinessData() string {
	if m != nil {
		return m.BussinessData
	}
	return ""
}

func (m *TaskNotifyRequest) GetErrMessage() string {
	if m != nil {
		return m.ErrMessage
	}
	return ""
}

func (m *TaskNotifyRequest) GetWorkerID() string {
	if m != nil {
		return m.WorkerID
	}
	return ""
}

func (m *TaskNotifyRequest) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

type Timestamp struct {
	Seconds              int64    `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos                int32    `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d00842e68e05382a, []int{1}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type TaskNotifyReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ErrMessage           string   `protobuf:"bytes,3,opt,name=errMessage,proto3" json:"errMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskNotifyReply) Reset()         { *m = TaskNotifyReply{} }
func (m *TaskNotifyReply) String() string { return proto.CompactTextString(m) }
func (*TaskNotifyReply) ProtoMessage()    {}
func (*TaskNotifyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d00842e68e05382a, []int{2}
}

func (m *TaskNotifyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskNotifyReply.Unmarshal(m, b)
}
func (m *TaskNotifyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskNotifyReply.Marshal(b, m, deterministic)
}
func (m *TaskNotifyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskNotifyReply.Merge(m, src)
}
func (m *TaskNotifyReply) XXX_Size() int {
	return xxx_messageInfo_TaskNotifyReply.Size(m)
}
func (m *TaskNotifyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskNotifyReply.DiscardUnknown(m)
}

var xxx_messageInfo_TaskNotifyReply proto.InternalMessageInfo

func (m *TaskNotifyReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TaskNotifyReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TaskNotifyReply) GetErrMessage() string {
	if m != nil {
		return m.ErrMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*TaskNotifyRequest)(nil), "schedule.TaskNotifyRequest")
	proto.RegisterType((*Timestamp)(nil), "schedule.Timestamp")
	proto.RegisterType((*TaskNotifyReply)(nil), "schedule.TaskNotifyReply")
}

func init() { proto.RegisterFile("schedule.proto", fileDescriptor_d00842e68e05382a) }

var fileDescriptor_d00842e68e05382a = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x41, 0x4f, 0xea, 0x40,
	0x14, 0x85, 0xd3, 0x42, 0x81, 0xde, 0xf7, 0x1e, 0x2f, 0x5e, 0x8d, 0x19, 0xd1, 0x18, 0x42, 0x5c,
	0xb0, 0x91, 0x05, 0x2e, 0x5d, 0xca, 0x86, 0x85, 0xc6, 0x14, 0xf6, 0x66, 0xe8, 0x5c, 0xa4, 0x52,
	0x3a, 0x65, 0xee, 0x10, 0xc2, 0x5f, 0xf1, 0xd7, 0x1a, 0xa6, 0xb4, 0x22, 0x71, 0xd7, 0xef, 0xdc,
	0x7b, 0x3a, 0x39, 0x67, 0x06, 0xda, 0x1c, 0x2f, 0x48, 0x6d, 0x52, 0x1a, 0xe4, 0x46, 0x5b, 0x8d,
	0xad, 0x92, 0x7b, 0x9f, 0x3e, 0x9c, 0x4d, 0x25, 0x2f, 0x5f, 0xb4, 0x4d, 0xe6, 0xbb, 0x88, 0xd6,
	0x1b, 0x62, 0x8b, 0x6d, 0xf0, 0x13, 0x25, 0xbc, 0xae, 0xd7, 0xaf, 0x45, 0x7e, 0xa2, 0xf0, 0x12,
	0x1a, 0xf3, 0x54, 0x6f, 0xc7, 0x4a, 0xf8, 0x5d, 0xaf, 0x1f, 0x46, 0x07, 0xc2, 0x1b, 0x08, 0x73,
	0xa3, 0x3f, 0x28, 0xb6, 0x63, 0x25, 0x6a, 0x6e, 0xfd, 0x5b, 0x40, 0x01, 0x4d, 0xa6, 0xf5, 0xab,
	0xb4, 0x0b, 0x51, 0x77, 0xb6, 0x12, 0xf1, 0x02, 0x02, 0xb6, 0xd2, 0x92, 0x08, 0x9c, 0xa7, 0x00,
	0xbc, 0x83, 0x7f, 0xb3, 0x0d, 0x73, 0x92, 0x11, 0xf3, 0x48, 0x5a, 0x29, 0x1a, 0xce, 0xf5, 0x53,
	0xc4, 0x5b, 0x00, 0x32, 0xe6, 0x99, 0x98, 0xe5, 0x3b, 0x89, 0xa6, 0x5b, 0x39, 0x52, 0xb0, 0x03,
	0xad, 0xad, 0x36, 0x4b, 0x32, 0xe3, 0x91, 0x68, 0xb9, 0x69, 0xc5, 0x78, 0x0f, 0xcd, 0xd8, 0x90,
	0xb4, 0xa4, 0x44, 0xd8, 0xf5, 0xfa, 0x7f, 0x86, 0xe7, 0x83, 0xaa, 0x99, 0x69, 0xb2, 0x22, 0xb6,
	0x72, 0x95, 0x47, 0xe5, 0x4e, 0xef, 0x11, 0xc2, 0x4a, 0x2d, 0xd2, 0xc4, 0x3a, 0x53, 0x7c, 0x28,
	0xa6, 0xc4, 0x7d, 0x9a, 0x4c, 0x66, 0x9a, 0x5d, 0x39, 0x41, 0x54, 0x40, 0xef, 0x0d, 0xfe, 0x1f,
	0x17, 0x9b, 0xa7, 0x3b, 0x44, 0xa8, 0xc7, 0x5a, 0x91, 0xf3, 0x07, 0x91, 0xfb, 0xde, 0xff, 0x76,
	0x75, 0xc8, 0x52, 0x74, 0x5b, 0xe2, 0x49, 0xd0, 0xda, 0x69, 0xd0, 0xe1, 0x04, 0xfe, 0x56, 0x07,
	0x24, 0x64, 0xf0, 0x09, 0xc2, 0x89, 0x95, 0xc6, 0xee, 0x45, 0xbc, 0x3e, 0x0a, 0x76, 0x7a, 0xbd,
	0x9d, 0xab, 0xdf, 0x87, 0x79, 0xba, 0x9b, 0x35, 0xdc, 0x03, 0x79, 0xf8, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0x50, 0x54, 0x84, 0xcc, 0x32, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskNotifierClient is the client API for TaskNotifier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskNotifierClient interface {
	StartTask(ctx context.Context, in *TaskNotifyRequest, opts ...grpc.CallOption) (*TaskNotifyReply, error)
}

type taskNotifierClient struct {
	cc *grpc.ClientConn
}

func NewTaskNotifierClient(cc *grpc.ClientConn) TaskNotifierClient {
	return &taskNotifierClient{cc}
}

func (c *taskNotifierClient) StartTask(ctx context.Context, in *TaskNotifyRequest, opts ...grpc.CallOption) (*TaskNotifyReply, error) {
	out := new(TaskNotifyReply)
	err := c.cc.Invoke(ctx, "/schedule.TaskNotifier/StartTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskNotifierServer is the server API for TaskNotifier service.
type TaskNotifierServer interface {
	StartTask(context.Context, *TaskNotifyRequest) (*TaskNotifyReply, error)
}

func RegisterTaskNotifierServer(s *grpc.Server, srv TaskNotifierServer) {
	s.RegisterService(&_TaskNotifier_serviceDesc, srv)
}

func _TaskNotifier_StartTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskNotifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskNotifierServer).StartTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.TaskNotifier/StartTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskNotifierServer).StartTask(ctx, req.(*TaskNotifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskNotifier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schedule.TaskNotifier",
	HandlerType: (*TaskNotifierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartTask",
			Handler:    _TaskNotifier_StartTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schedule.proto",
}
